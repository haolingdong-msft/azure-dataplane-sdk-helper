import { chat, githubHelper } from "../internal/initialize";
import { GithubHelper, PRFile, PullRequest } from "./GithubHelper";

const { HumanMessage, SystemMessage} = require("langchain/schema");


export class CodeReviewHelper {
    codeReviewSystemMessage = "You are an AI assistant that helps to do code review. I will give you a code snippet. You will need to give code review comments. If it is markdown file, you will need to verify if all href has corresponding link, the structure of the file, whether the description is fluent in natural language perspective, the code snippet provided in the file is correct and easy to understand. You will need to list the review comments with the code line.";
    async run(pr: PullRequest) {
        try {
            // 1. get review included files
            let reviewIncludedFiles: PRFile[] = await githubHelper.getReviewIncludedFiles(pr.number);
            // 2. add review comments for each file
            for (let i = 0; i < reviewIncludedFiles.length; i++) {
                const context = await githubHelper.getContextFromRawUrl(reviewIncludedFiles[i].filename, reviewIncludedFiles[i].commit_id);
                const result = await chat.call([
                    new SystemMessage(this.codeReviewSystemMessage),
                    new HumanMessage(context)
                ]);
                const comment = `Below are suggestions generated by OpenAI:\n${result.text}`
                await githubHelper.createReviewComment(reviewIncludedFiles[i].pull_number, reviewIncludedFiles[i].filename, comment, reviewIncludedFiles[i].commit_id, 1);
            }
            return "We've added some reviews to your PR. Please take a look, thanks!";
        } catch(e) {
            console.log(e);
            return "The code review process failed. Please try again."
        }
    }
}